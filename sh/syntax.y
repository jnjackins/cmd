%{// generated by goyacc

package main
%}

%term WORD QUOTE REDIR
%term SIMPLE WORDS PAREN
%left AND OR

%union{
        tree *treeNode
}
%type <tree> line cmd list pipe redir item words word
%type <tree> WORD QUOTE REDIR

%%

tree    : /* empty */
        | line             { execute($1) }

line    : list
        | cmd
        | cmd line         { $$ = mkTree(';', $1, $2) }

cmd     : list ';'
        | list '&'         { $$ = mkTree('&', $1) }

list    : pipe
        | list AND pipe    { $$ = mkTree(AND, $1, $3) }
        | list OR pipe     { $$ = mkTree(OR, $1, $3) }

pipe    : redir
        | pipe '|' redir   { $$ = mkTree('|', $1, $3) }

redir   : item
        | redir REDIR WORD { $$ = $1; $1.io.redirs[$2.int] = $3.string }

item    : words            { $$ = mkSimple($1) }
        | '(' line ')'     { $$ = mkTree(PAREN, $2) }

words   : word             { $$ = mkTree(WORDS, $1) }
        | words word       { $$ = $1; $1.children = append($1.children, $2) }

word    : WORD
        | QUOTE
